y = 'count')
ggplot(data = data, mapping = aes(x = qvcd)) +
geom_histogram(binwidth = 1) +
theme_bw() +
ggtitle() +
xlim(c(0, 60)) +
ylim(c(0, 25)) +
labs(x = expression(beta~"[mM lactate/day]"),
y = 'count')
ggplot(data = data, mapping = aes(x = qvcd)) +
geom_histogram(binwidth = 1) +
theme_bw() +
ggtitle() +
xlim(c(0, 60)) +
ylim(c(0, 25)) +
labs(x = expression(beta~"[mM lactate/day]"),
y = 'count') +
theme(axis.title.y = element_text(vjust = + 3),
axis.title.x = element_text(vjust = -0.75))
ggplot(data = data, mapping = aes(x = qvcd)) +
geom_histogram(binwidth = 1) +
theme_bw() +
ggtitle() +
labs(x = expression(beta~"[mM lactate/day]"),
y = 'count') +
theme(axis.title.y = element_text(vjust = + 3),
axis.title.x = element_text(vjust = -0.75))
introduce(data)
ggplot(data = data, mapping = aes(x = qvcd)) +
geom_histogram(binwidth = 1) +
theme_bw() +
ggtitle() +
labs(x = expression(beta~"[mM lactate/day]"),
y = 'count') +
theme(axis.title.y = element_text(vjust = + 3),
axis.title.x = element_text(vjust = -0.75))
ggplot(data = data, mapping = aes(x = qvcd)) +
geom_histogram(binwidth = 1) +
theme_bw() +
ggtitle(label = 'Distribution of the response') +
xlim(c(0, 60)) +
ylim(c(0, 25)) +
labs(x = expression(beta~"[mM lactate/day]"),
y = 'count') +
theme(axis.title.y = element_text(vjust = + 3),
axis.title.x = element_text(vjust = -0.75))
ggplot(data = data, mapping = aes(x = qvcd)) +
geom_histogram(binwidth = 1) +
theme_bw() +
ggtitle(label = 'Distribution of the response') +
xlim(c(0, 40)) +
ylim(c(0, 25)) +
labs(x = expression(beta~"[mM lactate/day]"),
y = 'count') +
theme(axis.title.y = element_text(vjust = + 3),
axis.title.x = element_text(vjust = -0.75))
ggplot(data = data, mapping = aes(x = qvcd)) +
geom_histogram(binwidth = 1) +
theme_bw() +
ggtitle(label = 'Distribution of the response') +
labs(x = expression(beta~"[mM lactate/day]"),
y = 'count') +
theme(axis.title.y = element_text(vjust = + 3),
axis.title.x = element_text(vjust = -0.75))
ggplot(data = data, mapping = aes(x = qvcd)) +
geom_histogram(binwidth = 1) +
theme_bw() +
ylim(c(0, 25)) +
ggtitle(label = 'Distribution of the response') +
labs(x = expression(beta~"[mM lactate/day]"),
y = 'count') +
theme(axis.title.y = element_text(vjust = + 3),
axis.title.x = element_text(vjust = -0.75))
ggplot(data = data, mapping = aes(x = qvcd)) +
geom_histogram(binwidth = 1) +
theme_bw() +
ylim(c(0, 25)) +
scale_x_continuous(breaks = round(seq(min(qvcd), max(qvcd), by = 5), 1)) +
ggtitle(label = 'Distribution of the response') +
labs(x = expression(beta~"[mM lactate/day]"),
y = 'count') +
theme(axis.title.y = element_text(vjust = + 3),
axis.title.x = element_text(vjust = -0.75))
ggplot(data = data, mapping = aes(x = qvcd)) +
geom_histogram(binwidth = 1) +
theme_bw() +
ylim(c(0, 25)) +
scale_x_continuous(breaks = round(seq(min(data$qvcd), max(data$qvcd), by = 5), 1)) +
ggtitle(label = 'Distribution of the response') +
labs(x = expression(beta~"[mM lactate/day]"),
y = 'count') +
theme(axis.title.y = element_text(vjust = + 3),
axis.title.x = element_text(vjust = -0.75))
ggplot(data = data, mapping = aes(x = qvcd)) +
geom_histogram(binwidth = 1) +
geom_density() +
theme_bw() +
ylim(c(0, 25)) +
scale_x_continuous(breaks = round(seq(min(data$qvcd), max(data$qvcd), by = 5), 1)) +
ggtitle(label = 'Distribution of the response') +
labs(x = expression(beta~"[mM lactate/day]"),
y = 'count') +
theme(axis.title.y = element_text(vjust = + 3),
axis.title.x = element_text(vjust = -0.75))
ggplot(data = data, mapping = aes(x = qvcd)) +
geom_density()+
theme_bw() +
ylim(c(0, 25)) +
scale_x_continuous(breaks = round(seq(min(data$qvcd), max(data$qvcd), by = 5), 1)) +
ggtitle(label = 'Distribution of the response') +
labs(x = expression(beta~"[mM lactate/day]"),
y = 'count') +
theme(axis.title.y = element_text(vjust = + 3),
axis.title.x = element_text(vjust = -0.75))
ggplot(data = data, mapping = aes(x = qvcd)) +
geom_density() +
theme_bw() +
scale_x_continuous(breaks = round(seq(min(data$qvcd), max(data$qvcd), by = 5), 1)) +
ggtitle(label = 'Distribution of the response') +
labs(x = expression(beta~"[mM lactate/day]"),
y = 'count') +
theme(axis.title.y = element_text(vjust = + 3),
axis.title.x = element_text(vjust = -0.75))
ggplot(data = data, mapping = aes(x = qvcd)) +
geom_histogram(binwidth = 1) +
theme_bw() +
ylim(c(-1, 25)) +
scale_x_continuous(breaks = round(seq(min(data$qvcd), max(data$qvcd), by = 5), 1)) +
ggtitle(label = 'Distribution of the response') +
labs(x = expression(beta~"[mM lactate/day]"),
y = 'count') +
theme(axis.title.y = element_text(vjust = + 3),
axis.title.x = element_text(vjust = -0.75))
0
ggplot(data = data, mapping = aes(x = qvcd)) +
geom_density() +
theme_bw() +
xlim(c(-1, 32.5))
ggplot(data = data, mapping = aes(x = qvcd)) +
geom_density(color="darkblue", fill="lightblue") +
theme_bw() +
xlim(c(-1, 32.5))
ggplot(data = data, mapping = aes(x = qvcd)) +
geom_density(fill = 'brick') +
theme_bw() +
xlim(c(-1, 32.5))
ggplot(data = data, mapping = aes(x = qvcd)) +
geom_density(fill = 'firebrick') +
theme_bw() +
xlim(c(-1, 32.5))
ggplot(data = data, mapping = aes(x = qvcd)) +
geom_density(fill = 'firebrick', size = 2) +
theme_bw() +
xlim(c(-1, 32.5))
ggplot(data = data, mapping = aes(x = qvcd)) +
geom_density(fill = 'firebrick', size = 1) +
theme_bw() +
xlim(c(-1, 32.5))
ggplot(data = data, mapping = aes(x = qvcd)) +
geom_density(fill = 'firebrick', size = 0.75) +
theme_bw() +
xlim(c(-1, 32.5))
ggplot(data = data, mapping = aes(x = qvcd)) +
geom_density(fill = 'firebrick', size = 0.75) +
theme_bw() +
xlim(c(-1, 32.5))
ggplot(data = data, mapping = aes(x = qvcd)) +
geom_density(fill = 'firebrick', size = 0.5) +
theme_bw() +
xlim(c(-1, 32.5))
ggplot(data = data, mapping = aes(x = qvcd)) +
geom_histogram(binwidth = 1) +
theme_bw() +
ylim(c(0, 25)) +
scale_x_continuous(breaks = round(seq(min(data$qvcd), max(data$qvcd), by = 5), 1)) +
ggtitle(label = 'Distribution of the response') +
labs(x = expression(beta~"[mM lactate/day]"),
y = 'count') +
theme(axis.title.y = element_text(vjust = + 3),
axis.title.x = element_text(vjust = -0.75))
ggplot(data = data, mapping = aes(x = qvcd)) +
geom_histogram(binwidth = 1, fill = 'firebrick', size = 0.5) +
theme_bw() +
ylim(c(0, 25)) +
scale_x_continuous(breaks = round(seq(min(data$qvcd), max(data$qvcd), by = 5), 1)) +
ggtitle(label = 'Distribution of the response') +
labs(x = expression(beta~"[mM lactate/day]"),
y = 'count') +
theme(axis.title.y = element_text(vjust = + 3),
axis.title.x = element_text(vjust = -0.75))
ggplot(data = data, mapping = aes(x = qvcd)) +
geom_histogram(binwidth = 1, fill = 'firebrick', size = 1) +
theme_bw() +
ylim(c(0, 25)) +
scale_x_continuous(breaks = round(seq(min(data$qvcd), max(data$qvcd), by = 5), 1)) +
ggtitle(label = 'Distribution of the response') +
labs(x = expression(beta~"[mM lactate/day]"),
y = 'count') +
theme(axis.title.y = element_text(vjust = + 3),
axis.title.x = element_text(vjust = -0.75))
ggplot(data = data, mapping = aes(x = qvcd)) +
geom_histogram(binwidth = 1, fill = 'firebrick', color = 'black', size = 0.5) +
theme_bw() +
ylim(c(0, 25)) +
scale_x_continuous(breaks = round(seq(min(data$qvcd), max(data$qvcd), by = 5), 1)) +
ggtitle(label = 'Distribution of the response') +
labs(x = expression(beta~"[mM lactate/day]"),
y = 'count') +
theme(axis.title.y = element_text(vjust = + 3),
axis.title.x = element_text(vjust = -0.75))
ggplot(data = data, mapping = aes(x = qvcd)) +
geom_histogram(binwidth = 1, fill = 'firebrick', color = 'black', size = 0.75) +
theme_bw() +
ylim(c(0, 25)) +
scale_x_continuous(breaks = round(seq(min(data$qvcd), max(data$qvcd), by = 5), 1)) +
ggtitle(label = 'Distribution of the response') +
labs(x = expression(beta~"[mM lactate/day]"),
y = 'count') +
theme(axis.title.y = element_text(vjust = + 3),
axis.title.x = element_text(vjust = -0.75))
ggplot(data = data, mapping = aes(x = qvcd)) +
geom_histogram(binwidth = 1, fill = 'firebrick', color = 'black', size = 0.5) +
theme_bw() +
ylim(c(0, 25)) +
scale_x_continuous(breaks = round(seq(min(data$qvcd), max(data$qvcd), by = 5), 1)) +
ggtitle(label = 'Distribution of the response') +
labs(x = expression(beta~"[mM lactate/day]"),
y = 'count') +
theme(axis.title.y = element_text(vjust = + 3),
axis.title.x = element_text(vjust = -0.75))
ggplot(data = data, mapping = aes(x = qvcd)) +
geom_density(fill = 'firebrick', size = 0.5) +
theme_bw() +
xlim(c(-1, 32.5))
ggplot(data = data, mapping = aes(x = qvcd)) +
geom_density(fill = 'firebrick', size = 0.5) +
theme_bw() +
xlim(c(-1, 32.5)) +
scale_x_continuous(breaks = round(seq(min(data$qvcd), max(data$qvcd), by = 5), 1)) +
ggtitle(label = 'Distribution of the response') +
labs(x = expression(beta~"[mM lactate/day]"),
y = 'count') +
theme(axis.title.y = element_text(vjust = + 3),
axis.title.x = element_text(vjust = -0.75))
ggplot(data = data, mapping = aes(x = qvcd)) +
geom_density(fill = 'firebrick', size = 0.5) +
theme_bw() +
xlim(c(-5, 32.5)) +
scale_x_continuous(breaks = round(seq(min(data$qvcd), max(data$qvcd), by = 5), 1)) +
ggtitle(label = 'Distribution of the response') +
labs(x = expression(beta~"[mM lactate/day]"),
y = 'count') +
theme(axis.title.y = element_text(vjust = + 3),
axis.title.x = element_text(vjust = -0.75))
ggplot(data = data, mapping = aes(x = qvcd)) +
geom_histogram(binwidth = 1, fill = 'firebrick', color = 'black', size = 0.5) +
theme_bw() +
ylim(c(0, 25)) +
scale_x_continuous(breaks = round(seq(min(data$qvcd), max(data$qvcd), by = 5), 1)) +
ggtitle(label = 'Distribution of the response') +
labs(x = expression(beta~"[mM lactate/day]"),
y = 'count') +
theme(axis.title.y = element_text(vjust = + 3),
axis.title.x = element_text(vjust = -0.75))
data_2 <- data
names <- c(1:3)
data_2[ , names] <- lapply(data_2[ , names] , factor)
plot_bar(data = data_2[ , 1:3],
ggtheme = theme_bw(), title = 'Distribution of the predictors') +
theme(axis.title.y = element_text(vjust = +3),
axis.title.x = element_text(vjust = -0.75))
plot_intro(data) +
theme_bw() +
theme(axis.title.y = element_text(vjust = +3),
axis.title.x = element_text(vjust = -0.75))
introduce(data)
View(data)
data_3 <- data %>%
mutate(class = as.factor(ifelse(test = data$qvcd < 0.1, yes = 'safe', no = 'not safe'))) %>%
select(pH, temp, osm, qvcd)
View(data_3)
data_3 <- data %>%
mutate(class = as.factor(ifelse(test = data$qvcd < 0.1, yes = 'safe', no = 'not safe'))) %>%
select(pH, temp, osm, class)
View(data)
View(data_3)
setwd("C:/Users/marcg/Photanol bv/Photanol all - students - General/2_Upscaling/2021 Alessia de Maio/5_Operational_envelope/First run (raw samples)/Models/data")
packages <- c('tidyverse',
'magrittr',
'DataExplorer',
'funModeling',
'GGally',
'plotly')
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages])
}
invisible(lapply(X = packages,
FUN = library,
character.only = TRUE))
ggpairs(data = data[ , 1:3]])
ggpairs(data = data[ , 1:3])
ggpairs(data = data[ , 1:3], color = data$qvcd)
ggpairs(data = data[ , 1:3], color = data$class)
ggpairs(data = data[ , 1:3], ggplot2::aes(colour = class))
ggpairs(data = data_3[ , 1:3], ggplot2::aes(colour = class))
ggpairs(data = data_3[ , 1:3], ggplot2::aes(colour = class))
ggpairs(data = data_3[ , 1:3], ggplot2::aes(fill = class))
ggpairs(data = data_3, columns = 1:3, ggplot2::aes(r = class))
ggpairs(data = data_3, columns = 1:3, ggplot2::aes(color = class))
data_3 <- data %>%
mutate(class = as.factor(ifelse(test = data$qvcd < 0.1, yes = 'safe', no = 'not safe'))) %>%
select(pH, temp, osm, class)
ggplot(data = data, mapping = aes(x = pH, y = qvcd)) +
geom_point() +
geom_smooth(method = 'lm', se = F) +
theme_bw() +
ggtitle(expression("pH vs"~beta)) +
labs(y = expression(beta~"[mM lactate/day]"),
x = 'pH')
data <- data %>%
filter(pH <= 10.5 & qvcd <5)
ggplot(data = data, mapping = aes(x = pH, y = qvcd) +
data <- data %>%
filter(pH <= 10.5 & qvcd < 5)
View(data)
ggplot(data = data, mapping = aes(x = pH, y = qvcd)) +
geom_point() +
geom_smooth(method = 'lm', se = F) +
theme_bw() +
ggtitle(expression("pH vs"~beta)) +
labs(y = expression(beta~"[mM lactate/day]"),
x = 'pH')
data <- read.csv(file = 'data.csv',
row.names = 1)
ggplot(data = data, mapping = aes(x = pH, y = qvcd)) +
geom_point() +
geom_smooth(method = 'lm', se = F) +
theme_bw() +
ggtitle(expression("pH vs"~beta)) +
labs(y = expression(beta~"[mM lactate/day]"),
x = 'pH')
data <- data %>%
filter(pH >= 10.5 & qvcd > 5)
ggplot(data = data, mapping = aes(x = pH, y = qvcd)) +
geom_point() +
geom_smooth(method = 'lm', se = F) +
theme_bw() +
ggtitle(expression("pH vs"~beta)) +
labs(y = expression(beta~"[mM lactate/day]"),
x = 'pH')
data <- data %>%
filter(pH >= 10.5, qvcd > 5)
ggplot(data = data, mapping = aes(x = pH, y = qvcd)) +
geom_point() +
geom_smooth(method = 'lm', se = F) +
theme_bw() +
ggtitle(expression("pH vs"~beta)) +
labs(y = expression(beta~"[mM lactate/day]"),
x = 'pH')
data <- data %>%
filter(pH > 10.4, qvcd > 5)
ggplot(data = data, mapping = aes(x = pH, y = qvcd)) +
geom_point() +
geom_smooth(method = 'lm', se = F) +
theme_bw() +
ggtitle(expression("pH vs"~beta)) +
labs(y = expression(beta~"[mM lactate/day]"),
x = 'pH')
View(data)
data <- read.csv(file = 'data.csv',
row.names = 1)
ggplot(data = data, mapping = aes(x = pH, y = qvcd)) +
geom_point() +
geom_smooth(method = 'lm', se = F) +
theme_bw() +
ggtitle(expression("pH vs"~beta)) +
labs(y = expression(beta~"[mM lactate/day]"),
x = 'pH')
data <- data %>%
filter(pH >= 10.5)
ggplot(data = data, mapping = aes(x = pH, y = qvcd)) +
geom_point() +
geom_smooth(method = 'lm', se = F) +
theme_bw() +
ggtitle(expression("pH vs"~beta)) +
labs(y = expression(beta~"[mM lactate/day]"),
x = 'pH')
ggplot(data = data, mapping = aes(x = pH, y = qvcd)) +
geom_point() +
geom_smooth(se = F) +
theme_bw() +
ggtitle(expression("pH vs"~beta)) +
labs(y = expression(beta~"[mM lactate/day]"),
x = 'pH')
data <- read.csv(file = 'data.csv',
row.names = 1)
data <- data %>%
filter(temp < 40, osm <= 0.3) %>%
fiter
data <- data %>%
filter(temp < 40, osm <= 0.3)
ggplot(data = data, mapping = aes(x = pH, y = qvcd)) +
geom_point() +
geom_smooth(se = F) +
theme_bw() +
ggtitle(expression("pH vs"~beta)) +
labs(y = expression(beta~"[mM lactate/day]"),
x = 'pH')
data <- read.csv(file = 'data.csv',
row.names = 1)
data <- data %>%
filter(temp < 40, osm <= 0.3)
ggplot(data = data, mapping = aes(x = pH, y = qvcd)) +
geom_point() +
geom_smooth(se = F) +
theme_bw() +
ggtitle(expression("pH vs"~beta)) +
labs(y = expression(beta~"[mM lactate/day]"),
x = 'pH')
View(data)
View(data)
data <- read.csv(file = 'data.csv',
row.names = 1)
View(data)
View(data)
data <- data %>%
filter(temp < 40, osm <= 0.3)
View(data)
data <- read.csv(file = 'data.csv',
row.names = 1)
data <- data %>%
filter(temp < 40 && osm <= 0.3)
data <- data %>%
filter(temp < 40 && osm <= 0.3)
data <- data %>%
filter(temp < 40 & osm <= 0.3)
View(data)
data <- read.csv(file = 'data.csv',
row.names = 1)
View(data)
data <- data %>%
filter(temp < 40 & osm <= 0.3 & pH > 9)
data <- read.csv(file = 'data.csv',
row.names = 1)
data <- data %>%
filter(temp <= 35, osm == 0.3 & pH > 9)
View(data)
data_3 <- data %>%
mutate(class = as.factor(ifelse(test = data$qvcd < 0.1, yes = 'safe', no = 'not safe'))) %>%
select(pH, temp, osm, class)
ggpairs(data = data_3, columns = 1:3, ggplot2::aes(color = class))
data <- read.csv(file = 'data.csv',
row.names = 1)
data_3 <- data %>%
mutate(class = as.factor(ifelse(test = data$qvcd < 0.1, yes = 'safe', no = 'not safe'))) %>%
select(pH, temp, osm, class)
ggpairs(data = data_3, columns = 1:3, ggplot2::aes(color = class))
ggplot(data = data_3, mapping = aes(x = pH, y = temp, fill = Class)) +
geom_point()
ggplot(data = data_3, mapping = aes(x = pH, y = temp, fill = class)) +
geom_point()
ggplot(data = data_3, mapping = aes(x = pH, y = temp, color = class)) +
geom_point()
View(data_3)
ggplot(data = data_3, mapping = aes(x = pH, y = temp, color = class)) +
geom_point(size = 3, position = position_jitter(h = 0.15, w = 0.15))
ggplot(data = data_3, mapping = aes(x = pH, y = temp, color = class)) +
geom_point(size = 3, position = position_jitter(h = 0.15, w = 0.15)) +
theme_bw() +
ggplot(data = data_3, mapping = aes(x = pH, y = temp, color = class)) +
geom_point(size = 3, position = position_jitter(h = 0.15, w = 0.15)) +
theme_bw()
ggplot(data = data_3, mapping = aes(x = pH, y = temp, color = class)) +
geom_point(size = 3, position = position_jitter(h = 0.15, w = 0.15)) +
theme_bw()
ggplot(data = data_3, mapping = aes(x = pH, y = temp, color = class)) +
geom_point() +
theme_bw()
ggplot(data = data_3, mapping = aes(x = pH, y = temp, color = class)) +
geom_point(size = 3, position = position_jitter(h = 0.1, w = 0.1)) +
theme_bw()
ggplot(data = data_3, mapping = aes(x = pH, y = temp, color = class)) +
geom_point(size = 3, position = position_jitter(h = 0.15, w = 0.15)) +
theme_bw()
ggplot(data = data_3, mapping = aes(x = pH, y = temp, color = class)) +
geom_point(size = 3, position = position_jitter(h = 0.15, w = 0.15)) +
theme_bw() +
theme(axis.title.y = element_text(vjust = + 3),
axis.title.x = element_text(vjust = -0.75))
ggpairs(data = data_3, columns = 1:3, ggplot2::aes(color = class))
ggplot(data = data_3, mapping = aes(x = pH, y = osm, color = class)) +
geom_point(size = 3, position = position_jitter(h = 0.15, w = 0.15)) +
theme_bw() +
theme(axis.title.y = element_text(vjust = + 3),
axis.title.x = element_text(vjust = -0.75))
ggplot(data = data_3, mapping = aes(x = pH, y = temp, color = class)) +
geom_point(size = 3, position = position_jitter(h = 0.15, w = 0.15)) +
theme_bw() +
theme(axis.title.y = element_text(vjust = + 3),
axis.title.x = element_text(vjust = -0.75))
ggplot(data = data_3, mapping = aes(x = temp, y = osm, color = class)) +
geom_point(size = 3, position = position_jitter(h = 0.15, w = 0.15)) +
theme_bw() +
theme(axis.title.y = element_text(vjust = + 3),
axis.title.x = element_text(vjust = -0.75))
prop.table(table(data_3$class))
plot_ly(data_3, x = ~pH, y = ~temp, z = ~osm, color = ~class, colors = c('#BF382A', '#0C4B8E'))
plot_ly(data_3, x = ~pH, y = ~temp, z = ~osm, color = ~class, colors = c('#BF382A', '#0C4B8E'))
plot_ly(data_3, x = ~pH, y = ~temp, z = ~osm, color = ~class, colors = c('#BF382A', '#0C4B8E'), alpha = 1)
plot_ly(data_3, x = ~pH, y = ~temp, z = ~osm, color = ~class, colors = c('#BF382A', '#0C4B8E'), alpha = 0.5)
plot_ly(data_3, x = ~pH, y = ~temp, z = ~osm, color = ~class, colors = c('#BF382A', '#0C4B8E'), stripmode = 'overlay')
